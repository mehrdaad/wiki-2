#+SETUPFILE: ~/.emacs.d/src/org-templates/level-1.org
#+TITLE: Python Sites 
#+OPTIONS: num:nil


* Tutorial
** Courses
+ [[https://www.coursera.org/learn/interactive-python-1][An Introduction to Interactive Programming in Python (Part 1)]]
  + [[http://www.codeskulptor.org/docs.html#tabs-Python][CodeSkulptor]]
  + [[https://stackoverflow.com/questions/16387770/how-to-integrate-simplegui-with-python-2-7-and-3-0-shell][How to integrate SimpleGUI with Python 2.7 and 3.0 shell]]
+ [[https://www.coursera.org/learn/interactive-python-2][An Introduction to Interactive Programming in Python (Part 2)]]

* Lib
** matplotlib
http://matplotlib.sourceforge.net/

** NumPy
Python 用于科学计算的最重要函数库应该是 NumPy
http://wiki.scipy.org/Tentative_NumPy_Tutorial
** Natural Language Toolkit
http://nltk.org/
** Open source Python modules
http://www.nltk.org/
** Sage
http://www.sagemath.org/

Sage is a free open-source mathematics software system licensed under
the GPL. It combines the power of many existing open-source packages
into a common Python-based interface.

** pandas
http://pandas.pydata.org/pandas-docs/stable/dsintro.html

** BeautifulSoup
http://www.crummy.com/software/BeautifulSoup/

** ZeroMQ
[[http://zeromq.org/][ØMQ (also spelled ZeroMQ, 0MQ or ZMQ)]] is a high-performance
asynchronous messaging library aimed at use in scalable distributed or
concurrent applications. 
** PyQtGraph
[[http://www.pyqtgraph.org/][PyQtGraph]] is a pure-python graphics and GUI library built on PyQt4 /
PySide and numpy. It is intended for use in mathematics / scientific /
engineering applications.

* IPython Notebook Viewer
http://nbviewer.ipython.org/
* OpenSource Project
** Django
https://www.djangoproject.com/download/

Django is a high-level Python Web framework that encourages rapid
development and clean, pragmatic design.

** py2exe
http://www.py2exe.org/

py2exe is a Python Distutils extension which converts Python scripts
into executable Windows programs, able to run without requiring a
Python installation.

** Twisted
http://twistedmatrix.com/trac/

Twisted is an event-driven networking engine written in Python and
licensed under the open source

** Mercurial
http://mercurial.selenic.com/

Mercurial is a free, distributed source control management tool. It
efficiently handles projects of any size and offers an easy and
intuitive interface.

** Pygame 
http://www.pygame.org/wiki/about

Pygame is a set of Python modules designed for writing games. Pygame
adds functionality on top of the excellent SDL library. This allows
you to create fully featured games and multimedia programs in the
python language. Pygame is highly portable and runs on nearly every
platform and operating system. Pygame itself has been downloaded
millions of times, and has had millions of visits to its website.

** ipython
http://ipython.org/

IPython provides a rich toolkit to help you make the most out of using Python, with:

+ Powerful Python shells (terminal and Qt-based).
+ A web-based notebook with the same core features but support for code, text, mathematical expressions, inline plots and other rich media.
+ Support for interactive data visualization and use of GUI toolkits.
+ Flexible, embeddable interpreters to load into your own projects.
+ Easy to use, high performance tools for parallel computing.

** Cobbler
http://cobbler.github.com

Cobbler is a Linux installation server that allows for rapid setup of
network installation environments. It glues together and automates
many associated Linux tasks so you do not have to hop between lots of
various commands and applications when rolling out new systems, and,
in some cases, changing existing ones. It can help with installation,
DNS, DHCP, package updates, power management, configuration management
orchestration, and much more.

** thousandparsec
http://thousandparsec.net/tp/download-instructions.php?product=tpclient-pywx&platform=win32

Thousand Parsec is a bunch of games based on a common framework for
building turn based space empire building games. Some of the games,
such as our first demo game MiniSec, are developed by the Thousand
Parsec developers themselves. In the near future we hope that other
developers will create their own games using Thousand Parsec
framework.

** GEOS - Geometry Engine, Open Source
http://trac.osgeo.org/geos/

GEOS (Geometry Engine - Open Source) is a C++ port of the  Java
Topology Suite (JTS). As such, it aims to contain the complete
functionality of JTS in C++. This includes all the  OpenGIS Simple
Features for SQL spatial predicate functions and spatial operators, as
well as specific JTS enhanced topology functions.

** Bazaar
http://wiki.bazaar.canonical.com/SourceDownloads

Bazaar is a distributed version control system that enables easy
collaborative development. One of Bazaar's strengths is its
adaptibility to different work flows.

** Trac
   developing Trac(http://trac.edgewall.org/) and its
plugins(http://trac-hacks.org/). Look at the more complex ones like
the discussion plugin(http://trac-hacks.org/wiki/DiscussionPlugin).
Then look up the Trac
APIs(http://www.edgewall.org/docs/branches-0.12-stable/epydoc/trac-module.html)
it uses and understand the component model(http://trac.edgewall.org/wiki/TracDev/ComponentArchitecture).


Why Trac?

I think Trac is one of these projects which show how to use Python's
beautiful features in the most sensible way. It's relatively easy to
get started and you will get the important abstractions and concepts
very fast. Plus, Trac is a really cool development tool and I'm sure
sooner or later you'll use it for another project of yours.

** gPodder 
http://gpodder.org/

gPodder downloads and manages free audio and video content
("podcasts") for you. Listen directly on your computer or on your
mobile devices.
** Tendenci 
Tendenci is the first open source CMS specifically created for
nonprofit organizations and provides tools like online payments with
merchant account integration, event registration, memberships etc.
with the goal of giving nonprofit organizations better websites
affordably.

You can download Tendenci on Github:
https://github.com/tendenci/tendenci and contact us/find out more at
http://tendenci.org.

** Zope 
http://www.zope.org/the-world-of-zope

http://svn.zope.org/

Zope is a community project concerned with free and open-source,
object-oriented web application server written in the Python
programming language. Zope stands for "Z Object Publishing
Environment", and was the first system using the now common object
publishing methodology for the Web.



** TO 
http://stackoverflow.com/questions/3907561/well-documented-open-source-python-projects-for-a-beginner

http://pythonsource.com/

http://ubuntuforums.org/showthread.php?t=1563165

http://code.google.com/p/pyscripter/

http://www.makeuseof.com/tag/the-10-best-open-source-projects-you-should-be-volunteering-to-help-with/



python test
http://pycheesecake.org/wiki/PythonTestingToolsTaxonomy#FuzzTestingTools

http://www.ibm.com/developerworks/aix/library/au-python_test/

http://www.ibm.com/developerworks/views/aix/libraryview.jsp?search_by=python+testing

The Python Testing Tools Taxonomy
http://packages.python.org/testing/


http://code.google.com/p/robotframework/downloads/list
* Web Frameworks for Python
A Web framework is a collection of packages or modules which allow
developers to write Web applications (see [[https://wiki.python.org/moin/WebApplications][WebApplications]]) or services
without having to handle such low-level details as protocols, sockets
or process/thread management.
https://wiki.python.org/moin/WebFrameworks

** Django
https://www.djangoproject.com/

Django is a high-level Python Web framework that encourages rapid
development and clean, pragmatic design.

** Flask

** Bottle
* templating systems for Python
** EZ
http://svn.webdav.org/repos/projects/ezt/trunk/ezt.py
** Cheetah
http://www.cheetahtemplate.org/
** ClearSilver
http://www.clearsilver.net/
** Quixote
http://www.mems-exchange.org/software/quixote/
** Django
https://docs.djangoproject.com/en/dev/topics/templates/

** Jinja2
http://jinja.pocoo.org/docs/

* Static Site Generator
+ Pelican: http://blog.getpelican.com/
* GUI Programming in Python
+ https://wiki.python.org/moin/GuiProgramming
+ https://wiki.python.org/moin/GUI%20Programming%20in%20Python

** Graphic User Interface FAQ
http://docs.python.org/2/faq/gui.html
* Blog
+ effbot.org
  Articles, Books, Code.

+ Ned Batchelder 
http://nedbatchelder.com/
